name: CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-sonarqube:
    runs-on: ubuntu-latest

    env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_SETTINGS_MODULE: task_manager.settings
        ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
        ROLLBAR_ENV: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        run: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Create and activate virtual environment
        run: |
            uv venv --python 3.13.2
            echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
            uv sync


      - name: Apply database migrations
        run: |
          python manage.py migrate

      - name: Run tests
        run: |
          make test

      - name: Lint code
        run: |
          make lint

      - name: Run tests with coverage
        run: make test-coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          fetch-depth: 0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          with:
          args: >
            -Dsonar.projectKey=solmael_python-project-52
            -Dsonar.organization=solmael
            -Dsonar.projectName=python-project-52
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=task_manager
            -Dsonar.tests=task_manager/tests
            -Dsonar.exclusions=**/migrations/**,**/__pycache__/**,/settings.py
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.coverage.reportPathPrefix= 